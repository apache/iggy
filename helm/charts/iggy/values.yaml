# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

---

# Iggy server configuration
server:
  enabled: true
  replicaCount: 1
  image:
    repository: apache/iggy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  ports:
    http: 3000
    quic: 8080
    tcp: 8090

  service:
    type: ClusterIP
    port: 3000

  serviceMonitor:
    # -- Enable this if you're using [Prometheus Operator](https://github.com/coreos/prometheus-operator)
    enabled: true
    # -- Namespace to deploy the ServiceMonitor
    namespace: ""
    # -- Fallback to the prometheus default unless specified
    interval: 30s
    # -- Add custom labels to the ServiceMonitor resource
    additionalLabels: { }
    honorLabels: false
    # -- Path to scrape metrics
    path: /metrics
    # -- Timeout for scrape metrics request
    scrapeTimeout: 10s

  users:
    root:
      # -- Create a secret for the root user
      createSecret: true
      username: iggy
      password: changeit
      # -- Whether to use an existing secret for the root user
      existingSecret:
        name: ""
        # -- Key in the secret to get the root username from
        usernameKey: username
        # -- Key in the secret to get the root password from
        passwordKey: password

  # -- Add persistence volume claim configuration
  persistence:
    # -- Enable persistence using a PVC
    enabled: false
    # -- PVC annotations
    annotations: { }
    # -- Persistent Volume Storage Class
    # If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning
    # If undefined (the default) or set to null, no storageClassName spec is
    #   set, choosing the default provisioner.  (gp2 on AWS, standard on
    #   GKE, AWS & OpenStack)
    storageClass: ""

    # -- A manually managed Persistent Volume and Claim
    # Requires persistence.enabled: true
    # If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    # -- PVC Access mode
    accessMode: ReadWriteOnce
    # -- PVC claim size
    size: 8Gi
  # -- Set up environmental variables to be added to the container
  env:
    - name: RUST_LOG
      value: info

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

# Iggy web-ui configuration
ui:
  enabled: true
  ports:
    http: 3050
  server:
    # -- Set the Iggy server endpoint explicitly. If kept blank, the Iggy service URL will be used
    endpoint: ""

  service:
    type: ClusterIP
    port: 3050
  replicaCount: 1
  # -- Extra environmental variables to add to the container
  env: {}
  image:
    repository: apache/iggy-web-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Additional labels to add to all resources
additionalLabels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80



