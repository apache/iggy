name: release_server

on:
  push:
    tags:
      - 'server-*'

env:
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  IGGY_CI_BUILD: true

jobs:
  check_release_trigger:
    name: Check if trigger was server tag creation
    runs-on: ubuntu-latest
    steps:
      - name: Check if trigger was a tag creation
        id: trigger
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/server-* ]];
          then
            echo "This push was a tag creation."
            echo "release=true" >> "$GITHUB_OUTPUT"
          else
            echo "This push was not a tag creation."
            echo "release=false" >> "$GITHUB_OUTPUT"
          fi
    outputs:
      release: ${{ steps.trigger.outputs.release == 'true' }}

  release_server:
    name: Build and release server binary
    needs: check_release_trigger
    if: ${{ needs.check_release_trigger.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Build iggy-server release binary for Linux-x86_64
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: x86_64-unknown-linux-musl
          toolchain: stable
          args: "--verbose --release --bin iggy-server"

      - name: Build iggy-cli release binary for Linux-x86_64
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: x86_64-unknown-linux-musl
          toolchain: stable
          args: "--verbose --release --no-default-features --bin iggy"

      - name: Prepare Linux-x86_64 artifacts
        run: |
          mkdir -p all_artifacts/Linux-x86_64
          cp target/x86_64-unknown-linux-musl/release/iggy-server all_artifacts/Linux-x86_64/
          cp target/x86_64-unknown-linux-musl/release/iggy all_artifacts/Linux-x86_64/

      - name: Build iggy-server release binary for Linux-aarch64
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: aarch64-unknown-linux-musl
          toolchain: stable
          args: "--verbose --release --bin iggy-server"

      - name: Build iggy-cli release binary for Linux-aarch64
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: aarch64-unknown-linux-musl
          toolchain: stable
          args: "--verbose --release --no-default-features --bin iggy"

      - name: Prepare Linux-aarch64 artifacts
        run: |
          mkdir -p all_artifacts/Linux-aarch64
          cp target/aarch64-unknown-linux-musl/release/iggy-server all_artifacts/Linux-aarch64/
          cp target/aarch64-unknown-linux-musl/release/iggy all_artifacts/Linux-aarch64/

      - name: Zip artifacts for each platform
        run: |
          mkdir zipped_artifacts
          for dir in all_artifacts/*; do
            if [ -d "$dir" ]; then
              zip -r "zipped_artifacts/$(basename $dir).zip" "$dir"
            fi
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: zipped_artifacts/*
          tag_name: ${GITHUB_REF#refs/tags/}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finalize_release:
    name: Finalize release
    runs-on: ubuntu-latest
    needs:
      - check_release_trigger
      - release_server
    if: always()
    steps:
      - name: Everything is fine
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Some checks failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
