# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: publish_csharp_sdk
on:
  push:
    tags:
      - 'csharp-sdk-*'

env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  validate:
    if: startsWith(github.ref, 'refs/tags/csharp-sdk-')
    runs-on: ubuntu-latest
    steps:
      - name: Extract tag name
        id: extract
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Validate tag format
        run: |
          TAG=${TAG}
          if [[ ! "$TAG" =~ ^csharp-sdk-([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$ ]]; then
            echo "Tag $TAG does not match strict semver format (csharp-sdk-X.Y.Z where 0 <= X,Y,Z <= 999)"
            exit 1
          fi
          echo "Valid tag: $TAG"

  tag:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag name
        id: extract_tag
        run: |
          tag=${GITHUB_REF#refs/tags/}
          echo "tag_name=$tag" >> "$GITHUB_OUTPUT"
          echo "::notice ::Tag that triggered the workflow: $tag"

      - name: Extract csharp sdk version from csproj
        id: extract_version
        working-directory: foreign/csharp/Iggy_SDK
        run: |
          # Check if Version property exists in csproj
          if grep -q "<Version>" Iggy_SDK.csproj; then
            version=$(grep -oP '(?<=<Version>)[^<]*' Iggy_SDK.csproj)
            echo "csharp_sdk_version=$version" >> "$GITHUB_OUTPUT"
            echo "::notice ::Version csharp sdk csproj version is $version"
          else
            echo "::error ::No Version property found in csproj. Please add <Version>X.Y.Z</Version> to Iggy_SDK.csproj"
            exit 1
          fi

      - name: Check if version from csproj is the same as the tag
        id: check_git_tag
        run: |
          if [[ "csharp-sdk-${{ steps.extract_version.outputs.csharp_sdk_version }}" == "${{ steps.extract_tag.outputs.tag_name }}" ]];
          then
            echo "::notice ::Tag ${{ steps.extract_tag.outputs.tag_name }} matches the version in csproj"
            echo "tag_matches=true" >> "$GITHUB_OUTPUT"
          else
            echo "::warning ::Tag ${{ steps.extract_tag.outputs.tag_name }} does not match the version from csproj"
            echo "tag_matches=false" >> "$GITHUB_OUTPUT"
          fi

    outputs:
      csharp_sdk_version: ${{ steps.extract_tag.outputs.tag_name }}
      tag_created: ${{ steps.check_git_tag.outputs.tag_matches }}

  publish:
    name: Publish csharp SDK
    needs: tag
    if: ${{ needs.tag.outputs.tag_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        working-directory: foreign/csharp/Iggy_SDK
        run: dotnet restore
      - name: Pack nuget
        working-directory: foreign/csharp/Iggy_SDK
        run: |
          dotnet pack -c release --no-restore -o .
      - name: Publish nuget
        working-directory: foreign/csharp/Iggy_SDK
        run: dotnet nuget push *.nupkg -k "${{ secrets.NUGET_API_KEY }}" -s https://api.nuget.org/v3/index.json

