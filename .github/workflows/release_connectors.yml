# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: release_connectors

on:
  workflow_call:
    inputs:
      tag_name:
        description: "The name of the tag to be released"
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  IGGY_CI_BUILD: true

jobs:
  build_connectors:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            executable: iggy
            file: iggy-connectors-x86_64-unknown-linux-musl.tgz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            executable: iggy
            file: iggy-connectors-aarch64-unknown-linux-musl.tgz
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            executable: iggy
            file: iggy-connectors-x86_64-unknown-linux-gnu.tgz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            executable: iggy.exe
            file: iggy-connectors-x86_64-pc-windows-msvc.zip
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            executable: iggy.exe
            file: iggy-connectors-aarch64-pc-windows-msvc.zip
          - target: x86_64-apple-darwin
            os: macos-latest
            executable: iggy
            file: iggy-connectors-x86_64-apple-darwin.zip
          - target: aarch64-apple-darwin
            os: macos-latest
            executable: iggy
            file: iggy-connectors-aarch64-apple-darwin.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "release-connectors-${{ matrix.platform.target }}"

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: ${{ matrix.platform.target == 'x86_64-unknown-linux-musl' }}

      - name: Prepare ${{ matrix.platform.target }} toolchain
        run: |
          rustup toolchain add --profile=minimal stable
          rustup target add --toolchain=stable ${{ matrix.platform.target }}
          rustup override set stable

      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build ${{ matrix.platform.target }} release binary
        run: cross +stable build --verbose --release --target ${{ matrix.platform.target }} -p iggy

      - name: Collect ${{ matrix.platform.target }} executable
        run: |
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.executable }} .

      - name: Create ${{ matrix.platform.file }} artifact
        run: |
          tar cvfz ${{ matrix.platform.file }} ${{ matrix.platform.executable }}
        if: ${{ matrix.platform.os == 'ubuntu-latest' }}

      - name: Create ${{ matrix.platform.file }} artifact
        uses: vimtor/action-zip@v1
        with:
          files: ${{ matrix.platform.executable }}
          dest: ${{ matrix.platform.file }}
        if: ${{ matrix.platform.os == 'windows-latest' || matrix.platform.os == 'macos-latest' }}

      - name: Upload ${{ matrix.platform.file }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.platform.target }}
          path: ${{ matrix.platform.file }}

      - name: Print message
        run: echo "::notice ::Created binary for ${{ matrix.platform.target }}"

    outputs:
      version: ${{ needs.tag.outputs.version }}
