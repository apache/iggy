services:
  # Apache Iggy Server
  iggy:
    image: apache/iggy:latest
    container_name: iggy-server
    ports:
      - "8090:8090"  # TCP
      - "8080:8080"  # HTTP
    environment:
      - IGGY_HTTP_ENABLED=true
      - IGGY_HTTP_ADDRESS=0.0.0.0:8080
      - IGGY_TCP_ADDRESS=0.0.0.0:8090
      - RUST_LOG=info
    volumes:
      - iggy-data:/data
    networks:
      - flink-iggy-network

  # Apache Flink JobManager
  flink-jobmanager:
    image: flink:1.18-scala_2.12
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - FLINK_PROPERTIES=jobmanager.rpc.address:flink-jobmanager
    networks:
      - flink-iggy-network

  # Apache Flink TaskManager
  flink-taskmanager:
    image: flink:1.18-scala_2.12
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=4
      - FLINK_PROPERTIES=jobmanager.rpc.address:flink-jobmanager
    networks:
      - flink-iggy-network

  # Kafka for testing Flink Kafka connector
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - flink-iggy-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - flink-iggy-network

  # PostgreSQL for testing JDBC sink
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - flink-iggy-network

  # Elasticsearch for testing ES sink
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - flink-iggy-network

networks:
  flink-iggy-network:
    driver: bridge

volumes:
  iggy-data:
  postgres-data:
  elasticsearch-data: